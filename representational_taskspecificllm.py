# -*- coding: utf-8 -*-
"""Representational-taskspecificllm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1thy94yn-i18w-T35gJ26WAot82hvUiSS
"""

!pip install datasets transformers sentence_transformers openai

from datasets import load_dataset

data=load_dataset("rotten_tomatoes")
data

data['train'][0,-1]

from transformers import pipeline

model_path="cardiffnlp/twitter-roberta-base-sentiment-latest"

pipe=pipeline(
    model=model_path,
    tokenizer=model_path,
    return_all_scores=True,
    device="cuda:0"
)

import numpy as np
from tqdm import tqdm
from transformers.pipelines.pt_utils import KeyDataset

y_pred=[]
for output in tqdm(pipe(KeyDataset(data["test"],"text")) , total=len(data["test"])):
  negative_score=output[0]["score"]
  positive_score=output[2]["score"]
  assignment=np.argmax([negative_score,positive_score])
  y_pred.append(assignment)

y_pred[0]

y_pred[50]

y_pred[100]

from sklearn.metrics import classification_report

def evaluate_performance(y_true,y_pred):
  performance=classification_report(
      y_true,y_pred ,
      target_names=["Negative Review","Positive review"]
  )
  print (performance)

evaluate_performance(data["test"]["label"],y_pred)